// Shopping Cart Class
class ShoppingCart {
    constructor() {
      this.cart = []; // Initialize an empty cart
    }
  
    // 1. Add Items to the Cart
    addItem = (productId, productName, quantity, price) => {
      const product = { productId, productName, quantity, price };
      this.cart.push(product); // Add product to the cart
    };
  
    // 2. Remove Items from the Cart
    removeItem = (productId) => {
      this.cart = this.cart.filter(product => product.productId !== productId); // Remove product by ID
    };
  
    // Update Item Quantity
    updateQuantity = (productId, newQuantity) => {
      this.cart = this.cart.map(product => 
        product.productId === productId 
          ? { ...product, quantity: newQuantity } // Update quantity
          : product
      );
    };
  
    // 3. Calculate Total Cost
    calculateTotalCost = () => {
      return this.cart.reduce((total, product) => {
        return total + (product.price * product.quantity); // Calculate total price
      }, 0);
    };
  
    // 4. Display Cart Summary
    displayCartSummary = () => {
      const summary = this.cart.map(product => {
        const totalPrice = product.price * product.quantity; // Calculate total price for each product
        return {
          productName: product.productName,
          quantity: product.quantity,
          totalPrice: totalPrice
        };
      }).filter(product => product.quantity > 0); // Filter out items with zero quantity
  
      summary.forEach(item => {
        console.log(`Product: ${item.productName}, Quantity: ${item.quantity}, Total Price: $${item.totalPrice.toFixed(2)}`);
      });
    };
  
    // 5. Bonus: Apply Discount Code
    applyDiscount = (code) => {
      const discountCodes = {
        "SAVE10": 0.10, // 10% discount
        "SAVE20": 0.20  // 20% discount
      };
  
      const discount = discountCodes[code] || 0; // Get discount value or default to 0
      const total = this.calculateTotalCost();
      const discountedTotal = total - (total * discount); // Apply discount
      return discountedTotal.toFixed(2); // Return discounted total
    };
  }
  
  // Example Usage
  const myCart = new ShoppingCart();
  myCart.addItem(1, "Apple", 3, 0.50);
  myCart.addItem(2, "Banana", 2, 0.30);
  myCart.addItem(3, "Orange", 1, 0.70);
  
  console.log("Cart Summary Before Update:");
  myCart.displayCartSummary();
  
  myCart.updateQuantity(2, 0); // Update quantity of Bananas to 0
  console.log("\nCart Summary After Update:");
  myCart.displayCartSummary();
  
  console.log(`Total Cost: $${myCart.calculateTotalCost().toFixed(2)}`);
  console.log(`Total after applying SAVE10 code: $${myCart.applyDiscount("SAVE10")}`);
  
